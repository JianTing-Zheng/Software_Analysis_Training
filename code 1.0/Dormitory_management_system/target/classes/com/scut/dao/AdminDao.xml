<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scut.dao.AdminDao">

    <select id="selectStudent" resultType="Student">
        select sID, sName, sSex, sIDcardNo, sEnrollYear, sPassword, sPhoneNumber, sEmail,
               dormID, roomID, livingState, schoolState from student order by sID asc
    </select>

    <insert id="insertStudentSeparately">
        insert into student(sID, sName, sSex, sIDcardNo, sEnrollYear, sPassword, sPhoneNumber, sEmail,
                            dormID, roomID, livingState, schoolState, CheckInDate, CheckOutDate, department)
                            values(#{sID}, #{sName}, #{sSex}, #{sIDcardNo}, #{sEnrollYear}, #{sPassword},
                                   #{sPhoneNumber}, #{sEmail}, #{dormID}, #{roomID}, #{livingState},
                                   #{schoolState}, #{CheckInDate}, #{CheckOutDate}, #{department})
    </insert>

    <delete id="deleteStudentSeparately">
        delete from student where sID=#{sID}
    </delete>

    <select id="selectOneStudent" resultType="Student">
        select * from student where sID=#{sID}
    </select>

    <update id="updateStudentDetail">
        update student set sName=#{sName}, sSex=#{sSex}, sIDcardNo=#{sIDcardNo}, sEnrollYear=#{sEnrollYear},
                           sPhoneNumber=#{sPhoneNumber}, sEmail=#{sEmail}, dormID=#{dormID}, roomID=#{roomID},
                           livingState=#{livingState}, schoolState=#{schoolState} where sID=#{sID}
    </update>

    <update id="updateAdminDetail">
        update superAdmin set aName=#{aName}, aSex=#{aSex}, aIDcardNo=#{aIDcardNo},
                              aPhoneNumber=#{aPhoneNumber}, aEmail=#{aEmail} where aID=#{aID}
    </update>

    <select id="selectAdmin" resultType="SuperAdmin">
        select * from superAdmin
    </select>

    <select id="selectHouseparent" resultType="Houseparent">
        select hID, hName, hSex, hIDcardNo, hPassword, hPhoneNumber, hEmail, dormID from houseparent order by hID asc
    </select>

    <insert id="insertHouseparentSeparately">
        insert into houseparent(hID, hName, hSex, hIDcardNo, hPassword, hPhoneNumber, hEmail, dormID) values(#{hID},
                                #{hName}, #{hSex}, #{hIDcardNo}, #{hPassword}, #{hPhoneNumber}, #{hEmail}, #{dormID})
    </insert>

    <delete id="deleteHouseparentSeparately">
        delete from houseparent where hID=#{hID}
    </delete>

    <select id="selectOneHouseparent" resultType="Houseparent">
        select * from houseparent where hID=#{hID}
    </select>

    <update id="updateHouseparentDetail">
        update houseparent set hName=#{hName}, hSex=#{hSex}, hIDcardNo=#{hIDcardNo}, hPhoneNumber=#{hPhoneNumber},
                               hEmail=#{hEmail}, dormID=#{dormID} where hID=#{hID}
    </update>

    <select id="selectDormitory" resultType="Dormitory">
        select dormID, numOfFloor from dormitory order by dormID asc
    </select>

    <insert id="insertDormitorySeparately">
        insert into dormitory(dormID, numOfFloor) values(#{dormID}, #{numOfFloor})
    </insert>

    <delete id="deleteDormitorySeparately">
        delete from dormitory where dormID=#{dormID}
    </delete>

    <select id="isExistDormitory" resultType="int">
        select count(*) from dormitory where dormID=#{dormID}
    </select>

    <select id="isExistRoom" resultType="int">
        select count(*) from room where roomID=#{roomID} and dormID=#{dormID}
    </select>

    <update id="updateDormitoryDetail">
        update dormitory set numOfFloor=#{numOfFloor} where dormID=#{dormID}
    </update>

    <update id="updateRoomDetail">
        update room set numOfFloor=#{numOfFloor}, roomCapacity=#{roomCapacity}, roomState=#{roomState}
                    where roomID=#{roomID} and dormID=#{dormID}
    </update>

    <insert id="insertRoomSeparately">
        insert into room(roomID, dormID, numOfFloor, roomCapacity, roomState) values(#{roomID}, #{dormID}, #{numOfFloor},
                    #{roomCapacity}, #{roomState})
    </insert>

    <select id="selectDormitoryDetail" resultType="DormitoryAndRoom">
        select distinct dormitory.dormID, dormitory.numOfFloor as dormNumOfFloor, roomID,
                        room.numOfFloor as roomNumOfFloor, roomCapacity, roomState
        from dormitory join room using (dormID)
        where dormitory.dormID=#{dormID} order by roomID asc
    </select>

    <delete id="deleteRoomSeparately">
        delete from room where roomID=#{roomID} and dormID=#{dormID}
    </delete>


    <update id="handleApplication">
        update application set applyState=#{applyState},handleTime=#{handleTime}
        where applyID=#{applyID};
    </update>

    <select id="selectionRoom">
        select roomState from room where roomID=#{roomID} and dormID=#{dormID}
    </select>

    <select id="selectRoomState">
        select roomID,dormID from student where sID=#{sID}
    </select>

    <update id="decreaseRoomState">
        update room set roomState=roomState-1 where roomID=#{roomID} and dormID=#{dormID}
    </update>

    <update id="changeStudentRoom">
        update student set roomID=#{roomID},dormID=#{dormID} where sID=#{sID}
    </update>

    <update id="deleteStutentRoom">
        update student set roomID=NULL,dormID=NULL where sID=#{sID}
    </update>

    <select id="selectApplications" resultType="Application">
        select applyID, sID, applyType, applyTime, applyReason, applyIntention
        from application where applyState=0
    </select>

</mapper>